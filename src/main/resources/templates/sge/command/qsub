qsub
[# th:if="${options.canBeBinary}"]
-b y
[/]
[# th:if="${options.useAllEnvVars}"]
-V
[/]
[# th:if="${options.priority != null && options.priority != 0}"]
-p [(${options.priority})]
[/]
[# th:if="${options.parallelEnvOptions != null}"]
    [# th:with="min=${options.parallelEnvOptions.min}, max=${options.parallelEnvOptions.max}"]
        [# th:if="${max > 0 && min > 0}"]
        -pe [(${options.parallelEnvOptions.name})] [(${min})]-[(${max})]
        [/]
        [# th:unless="${max > 0}"]
        -pe [(${options.parallelEnvOptions.name})] [(${options.parallelEnvOptions.min})]
        [/]
        [# th:unless="${min > 0}"]
        -pe [(${options.parallelEnvOptions.name})] 1-[(${options.parallelEnvOptions.max})]
        [/]
    [/]
[/]
[# th:if="${not #strings.isEmpty(options.name)}"]
    -N [(${options.name})]
[/]
[# th:if="${not #lists.isEmpty(options.queues)}"]
-q
    [# th:each="queue : ${options.queues}"]
    [(${queue})]
    [/]
[/]
[# th:if="${not #strings.isEmpty(options.workingDir)}"]
    -wd [(${options.workingDir})]
[/]
[# th:if="${logDir != null}"]
    -e [(${logDir})]/$JOB_ID.err
    -o [(${logDir})]/$JOB_ID.out
[/]
[# th:if="${not #strings.isEmpty(envVariables)}"]
    -v "[(${envVariables})]"
[/]
[(${options.command})]
[# th:if="${not #lists.isEmpty(arguments)}"]
    [# th:each="argument : ${arguments}"]
    "[(${argument})]"
    [/]
[/]
